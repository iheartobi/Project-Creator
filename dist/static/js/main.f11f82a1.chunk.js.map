{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dash/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dash/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","Notifications","notifications","map","notification","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","target","value","setState","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","Date","createProjects","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","userProfile","useFirestoreForProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f11f82a1.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authActions'\n\nconst SignedInLinks = (props) => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/create\">New Project</NavLink>\n      </li>\n      <li>\n        <a onClick={props.signOut}>Log Out</a>\n      </li>\n      <li>\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\n          {props.profile.initials}\n        </NavLink>\n      </li>\n    </ul>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return{\n    signOut: () => dispatch(signOut())\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks)\n","export const signIn = credentials => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\n      .then(() => {\n        dispatch({ type: \"LOGIN_SUCCESS\" });\n      })\n      .catch(err => {\n        dispatch({ type: \"LOGIN_ERROR\", err });\n      });\n  };\n};\n\nexport const signOut = () => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        dispatch({ type: \"LOGOUT_SUCCESS\" });\n      });\n  };\n};\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n      const firebase = getFirebase();\n      const firestore = getFirestore();\n  \n      firebase.auth().createUserWithEmailAndPassword(\n        newUser.email, \n        newUser.password\n      ).then(resp => {\n          console.log(resp)\n        return firestore.collection('users').doc(resp.user.uid).set({\n          firstName: newUser.firstName,\n          lastName: newUser.lastName,\n          initials: newUser.firstName[0] + newUser.lastName[0]\n        });\n        \n      }).then(() => {\n        dispatch({ type: 'SIGNUP_SUCCESS' });\n      }).catch((err) => {\n        dispatch({ type: 'SIGNUP_ERROR', err});\n      });\n    }\n  }","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst SignedOutLinks = () => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/signup\">Sign Up</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/signin\">Sign In</NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default SignedOutLinks;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nimport { connect } from 'react-redux';\n\nconst Navbar = (props) => {\n  const {auth, profile } = props\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks/>\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"brand-logo\">\n          {\" \"}\n          Project Creator\n        </Link>\n       {links}\n      </div>\n    </nav>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log(state)\n  return{\n    auth: state.firebase.auth, \n    profile: state.firebase.profile\n  }\n}\n\nexport default connect(mapStateToProps)(Navbar);\n","import React from 'react';\nimport moment from 'moment';\n\nconst Notifications = props => {\n  console.log(props);\n  const { notifications } = props;\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"notifications\">\n            {notifications &&\n              notifications.map(notification => {\n                return (\n                 \n                    <li key={notification.id}>\n                      <span className=\"pink-text\">{notification.user} </span>\n                      <span>{notification.content}</span>\n                      <div className=\"grey-text note-date\">\n                        {moment(notification.time.toDate()).fromNow()}\n                      </div>\n                      <hr></hr>\n                    </li>\n                );\n              })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Notifications;\n","import React from 'react';\nimport moment from 'moment'\n\nconst ProjectSummary = ({ project }) => {\n  console.log(project);\n  return (\n    <div className=\"card z-depth-0 project-summary\">\n      <div className=\"card grey-text text-darken-3\">\n        <span className=\"card-title\">{project.title}</span>\n        <p>\n          Posted By: {project.authorFirstName + '  ' + project.authorLastName}\n        </p>\n  <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n      </div>\n    </div>\n  );\n};\nexport default ProjectSummary;\n","import React from \"react\";\nimport ProjectSummary from \"./ProjectSummary\";\nimport { Link } from \"react-router-dom\";\n\nconst ProjectList = ({ projects }) => {\n  return (\n    <div className=\"project-list section\">\n      {projects &&\n        projects.map(project => {\n          return (\n            <Link to={\"/project/\" + project.id} key={project.id}>\n              <ProjectSummary project={project} />\n            </Link>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default ProjectList;\n","import React, { Component } from \"react\";\nimport Notifications from \"./Notifications\";\nimport ProjectList from \"../projects/ProjectList\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom'\n\nclass Dashboard extends Component {\n    render() {\n        console.log(this.props)\n\n        const { projects, auth, notifications } = this.props\n      if(!auth.uid) return <Redirect to=\"/signin\"/>\n      else{\n        return (\n          <div className=\"dashboard container\">\n            <div className=\"row\">\n              <div className=\"col s12 m6\">\n                <ProjectList projects={projects}/>\n              </div>\n              <div className=\"col s12 m5 offset-m1\">\n              <Notifications notifications={notifications}/>\n              </div>\n            </div>\n          </div>\n        );\n      }\n    \n  }\n}\nconst mapStateToProps = state => {\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth, \n    notifications: state.firestore.ordered.notifications\n  }\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{\n    collection: 'projects', orderBy: ['createdAt', 'desc']},\n  {collection: 'notifications', limit: 6, orderBy: ['time', 'desc']}])\n)(Dashboard);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\n\nfunction ProjectDetails(props) {\n  const { project, auth } = props;\n  if(!auth.uid) return <Redirect to=\"/signin\"/>\n  if (project) {\n    return (\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            <span className=\"card-title\">{project.title}</span>\n            <p>{project.content}</p>\n          </div>\n          <div className=\"card-action grey-lighten-4 grey-text\">\n            <div className=\"grey-text\">\n              Posted By {project.authorFirstName} {project.authorLastName}\n            </div>\n            <div className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"container\">\n        <p>Loading Details</p>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null;\n  return {\n    project: project,\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{ collection: \"projects\" }])\n)(ProjectDetails);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signIn } from \"../../store/actions/authActions\";\nimport { Redirect } from 'react-router-dom'\n\nclass SignIn extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n\n  handleChange = e => {\n    console.log(e.target.value);\n    this.setState({\n      [e.target.id]: e.target.value\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.signIn(this.state);\n  };\n\n  render() {\n    const { authError, auth } = this.props;\n    if(auth.uid) return <Redirect to=\"/\"/>\n    return (\n      <div className=\"container\">\n        <form onSubmit={e => this.handleSubmit(e)} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              onChange={e => this.handleChange(e)}\n              type=\"email\"\n              id=\"email\"\n            />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              onChange={e => this.handleChange(e)}\n              type=\"password\"\n              id=\"password\"\n            />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n            <div className=\"red-text center\">\n              {authError ? <p>{authError}</p> : null}\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signIn: creds => dispatch(signIn(creds))\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from 'react-router-dom'\nimport { signUp } from '../../store/actions/authActions'\n\n class SignUp extends Component {\n  state = {\n      firstName: \"\",\n      lastName: \"\",\n      email: '',\n      password: ''\n  };\n\n  handleChange = e => {\n    console.log(e.target.value);\n    this.setState({\n       [e.target.id]: e.target.value\n    })\n    \n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.signUp(this.state)\n  };\n\n  render() {\n    const { auth, authError } = this.props\n    if(auth.uid) return <Redirect to=\"/\"/>\n    return (\n      <div className=\"container\">\n        <form onSubmit={e => this.handleSubmit(e)} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input\n              onChange={e => this.handleChange(e)}\n              type=\"text\"\n              id=\"firstName\"\n            />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input\n              onChange={e => this.handleChange(e)}\n              type=\"text\"\n              id=\"lastName\"\n            />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              onChange={e => this.handleChange(e)}\n              type=\"email\"\n              id=\"email\"\n            />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input onChange={e => this.handleChange(e)} type=\"password\" id=\"password\" />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n            <div className=\"red-text center\">\n              {authError ? <p>{authError}</p> : null}\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    signUp: newUser => dispatch(signUp(newUser))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\n","import React, { Component } from \"react\";\nimport { createProjects } from '../../store/actions/projectActions'\nimport { connect} from 'react-redux';\nimport { Redirect } from 'react-router-dom'\n\n\nclass CreateProject extends Component {\n  state = {\n      title: '',\n      content: ''\n  };\n\n  handleChange = e => {\n    this.setState({\n       [e.target.id]: e.target.value\n    })\n    \n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.createProject(this.state)\n    this.props.history.push('/')\n  };\n\n  render() {\n    const { auth } = this.props\n    if(!auth.uid) return <Redirect to=\"/signin\"/>\n    return (\n      <div className=\"container\">\n        <form onSubmit={e => this.handleSubmit(e)} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"title\">Title</label>\n            <input\n              onChange={e => this.handleChange(e)}\n              type=\"text\"\n              id=\"title\"\n            />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"content\">Project Content</label>\n           <textarea onChange={e => this.handleChange(e)} className=\"materialize-textarea\" id=\"content\" type='text'></textarea>\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Create Project</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return{\n    auth: state.firebase.auth\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return{ createProject: (project) => dispatch(createProjects(project))}\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateProject)","export const createProjects = (project) => {\n    return(dispatch, getState, {getFirestore, getFirebase}) => {\n        //make async call to database\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile\n        const authorId = getState().firebase.auth.uid\n        firestore.collection('projects').add({\n            ...project, \n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authorId,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({type: 'CREATE_PROJECT', project})\n        }).catch(err => {\n            dispatch({type: 'CREATE_PROJECT_ERROR', err})\n\n        })\n    }\n}\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dash/Dashboard\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route exact path=\"/project/:id\" component={ProjectDetails} />\n            <Route exact path=\"/signin\" component={SignIn} />\n            <Route exact path=\"/signup\" component={SignUp} />\n            <Route exact path=\"/create\" component={CreateProject} />\n\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  authError: null\n};\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"LOGIN_ERROR\":\n      console.log(\"login failure\");\n\n      return {\n        ...state,\n        authError: action.err.message\n      };\n    case \"LOGIN_SUCCESS\":\n      console.log(\"login success\");\n      return {\n        ...state,\n        authError: null\n      };\n    case \"LOGOUT_SUCCESS\":\n      console.log(\"logout success\");\n      return state;\n    case \"SIGNUP_SUCCESS\":\n      console.log(\"signup success\");\n      return {\n        ...state,\n        authError: null\n      };\n    case \"SIGNUP_ERROR\":\n      console.log(\"signup failure\");\n\n      return {\n        ...state,\n        authError: action.err.message\n      };\n\n    default:\n      return state;\n  }\n};\nexport default authReducer;\n","const initState = {\n  projects: [\n    { id: 1, title: \"Help\", content: \"I need help with this project\" },\n    { id: 2, title: \"Go Falcons\", content: \"Help the team win\" },\n    {\n      id: 3,\n      title: \"Making my Way Home\",\n      content: \"I need with a job to get home.\"\n    }\n  ]\n};\n\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"CREATE_PROJECT\":\n      console.log(\"created project\", action.project);\n      return state;\n    case \"CREATE_PROJECT_ERROR\":\n      console.log(\"Project not created\", action.err);\n      return state;\n    default:\n      return state;\n  }\n};\nexport default projectReducer;\n","import authReducer from \"./authReducer\";\nimport projectReducer from \"./projectReducer\";\nimport { combineReducers } from \"redux\";\nimport {firestoreReducer} from 'redux-firestore'\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n  });\n  \n  export default rootReducer","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\nvar firebaseConfig = {\n    apiKey: \"AIzaSyCzam3QU84qn_bGIrAOsHl3_nTEbP9iD94\",\n    authDomain: \"project-creator-13553.firebaseapp.com\",\n    databaseURL: \"https://project-creator-13553.firebaseio.com\",\n    projectId: \"project-creator-13553\",\n    storageBucket: \"project-creator-13553.appspot.com\",\n    messagingSenderId: \"506776407652\",\n    appId: \"1:506776407652:web:e01028c5e66b603ddcd971\",\n    measurementId: \"G-BJZ8XX9X7M\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  firebase.firestore()\n\n  export default firebase","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbConfig\";\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reactReduxFirebase(fbConfig, {\n      userProfile: \"users\",\n      useFirestoreForProfile: true,\n      attachAuthIsReady: true\n    }),\n    reduxFirestore(fbConfig)\n  )\n);\n//  const user = \n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n     <App/>\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}